#!/bin/bash
# This test sets up a simple HTTPS site, with OCSP stapling
# enabled. The OCSP response is read from a response file generated by
# the test.

set -e

cp test/authority/template.in "${AUTOPKGTEST_TMP}/ca.template"
cp test/authority/ocsp-responder/template "${AUTOPKGTEST_TMP}/ocsp.template"
# the server template contains some replacement patterns
sed -e s,__HOSTNAME__,$(hostname), \
    -e s,__OCSP_URI__,, \
    -e s,__IP_ADDRESSES__,, test/authority/subca/server/template.in \
    >"${AUTOPKGTEST_TMP}/server.template"

# create private keys
for i in ca server ocsp; do
    certtool --outfile "${AUTOPKGTEST_TMP}/${i}.key" --generate-privkey --key-type=ecdsa
done

# create certificates
certtool --outfile "${AUTOPKGTEST_TMP}/ca.pem" --generate-self-signed --load-privkey "${AUTOPKGTEST_TMP}/ca.key" --template "${AUTOPKGTEST_TMP}/ca.template"
for i in server ocsp; do
    certtool --outfile "${AUTOPKGTEST_TMP}/${i}.pem" --generate-certificate --load-ca-certificate "${AUTOPKGTEST_TMP}/ca.pem" --load-ca-privkey "${AUTOPKGTEST_TMP}/ca.key" --load-privkey "${AUTOPKGTEST_TMP}/${i}.key" --template "${AUTOPKGTEST_TMP}/${i}.template"
    cat "${AUTOPKGTEST_TMP}/${i}.pem" "${AUTOPKGTEST_TMP}/ca.pem" >"${AUTOPKGTEST_TMP}/${i}-chain.pem"
done

# create ca.cnf, touch index file
cat - >"${AUTOPKGTEST_TMP}/ca.cnf" <<EOF
default_ca = ca
default_md = sha256
database = ${AUTOPKGTEST_TMP}/index.txt
EOF
touch "${AUTOPKGTEST_TMP}/index.txt"

# mark server certificate as valid in the index file
openssl ca -valid "${AUTOPKGTEST_TMP}/server.pem" -keyfile "${AUTOPKGTEST_TMP}/ca.key" -cert "${AUTOPKGTEST_TMP}/ca.pem" -config "${AUTOPKGTEST_TMP}/ca.cnf" || true

# create the OCSP response file
openssl ocsp -index "${AUTOPKGTEST_TMP}/index.txt" -rsigner "${AUTOPKGTEST_TMP}/ocsp.pem" -rkey "${AUTOPKGTEST_TMP}/ocsp.key" -CA "${AUTOPKGTEST_TMP}/ca.pem" -issuer "${AUTOPKGTEST_TMP}/ca.pem" -cert "${AUTOPKGTEST_TMP}/server.pem" -respout "${AUTOPKGTEST_TMP}/ocsp.der"

# create the test site
cat - >/etc/apache2/sites-available/test-tls.conf <<EOF
<VirtualHost _default_:443>
	ServerName $(hostname)
	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html
	<Directory />
		Options FollowSymLinks
		AllowOverride None
	</Directory>
	ErrorLog \${APACHE_LOG_DIR}/error.log
	LogLevel debug
	CustomLog \${APACHE_LOG_DIR}/ssl_access.log combined
	GnuTLSEnable On
	GnuTLSCertificateFile "${AUTOPKGTEST_TMP}/server-chain.pem"
	GnuTLSKeyFile "${AUTOPKGTEST_TMP}/server.key"
	GnuTLSPriorities NORMAL
	GnuTLSOCSPResponseFile "${AUTOPKGTEST_TMP}/ocsp.der"
</VirtualHost>
EOF

# enable module and test site
a2enmod gnutls
a2ensite test-tls
service apache2 restart

# run a test request
curl -v --cacert "${AUTOPKGTEST_TMP}/ca.pem" --stderr - https://$(hostname)/
